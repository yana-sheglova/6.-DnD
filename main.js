!function(){"use strict";class e{constructor(e,t){this.text=e,this.columnId=t,this.cardElement=this.createCard(),this.bindEvents()}createCard(){const e=document.createElement("div");return e.classList.add("task"),e.setAttribute("draggable",!0),e.innerHTML=`\n            <span>${this.text}</span>\n            <button class="delete">✖</button>\n        `,e}bindEvents(){this.cardElement.addEventListener("dragstart",(e=>{e.dataTransfer.setData("text/plain",this.text),e.dataTransfer.effectAllowed="move",this.cardElement.classList.add("dragging")})),this.cardElement.addEventListener("dragend",(()=>{this.cardElement.classList.remove("dragging")})),this.cardElement.querySelector(".delete").addEventListener("click",(()=>{this.removeCard()}))}removeCard(){this.cardElement.remove(),this.removeFromLocalStorage(this.text)}removeFromLocalStorage(e){const t=(JSON.parse(localStorage.getItem("cards"))||[]).filter((t=>t.text!==e));localStorage.setItem("cards",JSON.stringify(t))}}class t{constructor(e){this.column=e,this.columnId=this.column.dataset.columnId,this.formElement=this.createForm(),this.column.append(this.formElement),this.bindEvents()}createForm(){const e=document.createElement("div");return e.classList.add("form"),e.innerHTML='\n            <textarea class="task-text" rows="3" placeholder="Enter task text"></textarea>\n            <div class="button-container">\n                <button class="add">Add</button>\n                <button class="close">✖</button>\n            </div>\n        ',setTimeout((()=>e.querySelector(".task-text").focus()),0),e}bindEvents(){this.formElement.querySelector(".add").addEventListener("click",(()=>{const t=this.formElement.querySelector(".task-text").value;if(t){const r=new e(t),s=this.column.querySelector(".add-task");this.column.insertBefore(r.cardElement,s),this.saveToLocalStorage(t,this.columnId),this.formElement.querySelector(".task-text").value="",this.formElement.remove(),s.style.display="block"}})),this.formElement.querySelector(".close").addEventListener("click",(()=>{this.formElement.remove(),this.column.querySelector(".add-task").style.display="block"}))}saveToLocalStorage(e,t){const r=JSON.parse(localStorage.getItem("cards"))||[];r.push({text:e,columnId:t}),localStorage.setItem("cards",JSON.stringify(r))}}class r{constructor(){this.columns=document.querySelectorAll(".column"),this.init()}init(){this.columns.forEach((r=>{r.addEventListener("dragover",(e=>{e.preventDefault(),e.dataTransfer.dropEffect="move";const t=document.querySelector(".dragging");if(!t)return;const s=this.getDragAfterElement(r,e.clientY),n=r.querySelector(".add-task");s?r.insertBefore(t,s):r.insertBefore(t,n)})),r.addEventListener("drop",(t=>{t.preventDefault();const s=t.dataTransfer.getData("text/plain"),n=Array.from(this.columns).flatMap((e=>Array.from(e.querySelectorAll(".task")))).find((e=>e.querySelector("span").textContent===s));n&&n.remove();const a=new e(s,r.dataset.columnId),o=this.getDragAfterElement(r,t.clientY),c=r.querySelector(".add-task");o?r.insertBefore(a.cardElement,o):r.insertBefore(a.cardElement,c),this.saveCardPosition(a)}));const s=r.querySelector(".add-task");s.addEventListener("click",(()=>{s.style.display="none",new t(r)})),this.loadCards(r)}))}loadCards(t){const r=t.dataset.columnId;(JSON.parse(localStorage.getItem("cards"))||[]).filter((e=>e.columnId===r)).forEach((r=>{const s=new e(r.text,r.columnId);t.insertBefore(s.cardElement,t.querySelector(".add-task"))}))}saveCardPosition(e){const t=JSON.parse(localStorage.getItem("cards"))||[],r=t.findIndex((t=>t.text===e.text));-1!==r?t[r].columnId=e.columnId:t.push({text:e.text,columnId:e.columnId}),localStorage.setItem("cards",JSON.stringify(t))}getDragAfterElement(e,t){const r=[...e.querySelectorAll(".task:not(.dragging)")];return r.reduce(((e,r)=>{const s=r.getBoundingClientRect(),n=t-s.top-s.height/2;return n<0&&n>(e?.offset||-1/0)?{offset:n,element:r}:e}),null)?.element}}document.addEventListener("DOMContentLoaded",(()=>{new r}))}();
//# sourceMappingURL=main.js.map